# Distributed under the OSI-approved BSD 3-Clause License.
# See accompanying file LICENSE.txt for details.

name: get-crowdin-language-list-from-languages-file

description: >
  Get CROWDIN_LANGUAGE_LIST from languages.json file.

inputs:
  language:
    required: true    # [required]
    description: >
      The language to fetch from the list, or 'all' to get all languages.
  language-source:
    required: true    # [required]
    description: >
      The language from which Crowdin translates from.
  languages-file:
    required: false
    default: 'languages.json'
    description: >
      The filename of the languages.json.
  working-directory:
    required: false
    default: ${{ github.workspace }}
    description: >
      The directory from which to run commands or locate files. Defaults to '\$\{\{ github.workspace \}\}'.

outputs:
  CROWDIN_LANGUAGE_LIST:
    value: ${{ steps.gcll.outputs.CROWDIN_LANGUAGE_LIST }}
    description: >
      A comma-separated list of Crowdin languages.

runs:
  using: composite
  steps:
    - name: Get the Crowdin Language List
      id: gcll
      shell: bash
      run: |
        LANGUAGE="${{ inputs.language }}"
        LANGUAGE_SOURCE="${{ inputs.language-source }}"
        LANGUAGES_FILE="${{ inputs.languages-file }}"
        WORKING_DIRECTORY=$(echo "${{ inputs.working-directory }}" | sed 's#\\#/#g' | sed 's#^\([A-Za-z]\):#/\L\1#')

        cd "${WORKING_DIRECTORY}"

        # Remove the possible '\r' in array generated by jq. (for Windows Bash)
        # See https://github.com/jqlang/jq/issues/92#issuecomment-350754078
        # Starting from version 1.7 of jq, we can pass --binary/-b argument to do so.
        # See https://github.com/jqlang/jq/releases/tag/jq-1.7

        if [[ "${LANGUAGE}" == "all" ]]; then
          CROWDIN_LANGUAGE_ARRAY=($(
            jq -r \
            --arg src "${LANGUAGE_SOURCE}" \
            'to_entries | map(select(.key != $src)) | .[].value.crowdin' \
            "${LANGUAGES_FILE}" \
            | tr -d '\r'
          ))
        else
          CROWDIN_LANGUAGE_ARRAY=($(
            jq -r \
            --arg key "${LANGUAGE}" \
            --arg src "${LANGUAGE_SOURCE}" \
            'if $key == $src then empty else values[$key].crowdin end' \
            "${LANGUAGES_FILE}" \
            | tr -d '\r'
          ))
        fi

        echo "CROWDIN_LANGUAGE_ARRAY: ${CROWDIN_LANGUAGE_ARRAY[@]}"

        CROWDIN_LANGUAGE_LIST=""
        for CROWDIN_LANGUAGE in "${CROWDIN_LANGUAGE_ARRAY[@]}"; do
          echo "CROWDIN_LANGUAGE: ${CROWDIN_LANGUAGE}"
          if [[ -z ${CROWDIN_LANGUAGE_LIST} ]]; then
            CROWDIN_LANGUAGE_LIST="${CROWDIN_LANGUAGE}"
          else
            CROWDIN_LANGUAGE_LIST="${CROWDIN_LANGUAGE_LIST},${CROWDIN_LANGUAGE}"
          fi
        done

        echo "CROWDIN_LANGUAGE_LIST=${CROWDIN_LANGUAGE_LIST}" >> ${GITHUB_OUTPUT}
        echo "CROWDIN_LANGUAGE_LIST:"
        echo "${CROWDIN_LANGUAGE_LIST}"
