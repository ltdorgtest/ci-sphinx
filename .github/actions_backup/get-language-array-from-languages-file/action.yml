# Distributed under the OSI-approved BSD 3-Clause License.
# See accompanying file LICENSE.txt for details.

name: get-language-array-from-languages-file

description: Get the Language Array from languages.json

inputs:
  language:
    required: true    # [required]
    description: >
      The language to fetch from the list, or 'all' to get all languages.
  languages-file:
    required: false
    default: 'languages.json'
    description: >
      The filename of the languages.json.
  working-directory:
    required: false
    default: ${{ github.workspace }}
    description: >
      The directory from which to run commands or locate files. Defaults to '\$\{\{ github.workspace \}\}'.

outputs:
  LANGUAGE_NUM:
    value: ${{ steps.glll.outputs.LANGUAGE_NUM }}
    description: xxx
  LANGUAGE_ARRAY:
    value: ${{ steps.glll.outputs.LANGUAGE_ARRAY }}
    description: xxx

runs:
  using: composite
  steps:
    - name: Get the Language List from languages.json
      id: glll
      shell: bash
      run: |
        LANGUAGE="${{ inputs.language }}"
        LANGUAGES_FILE="${{ inputs.languages-file }}"
        WORKING_DIRECTORY=$(echo "${{ inputs.working-directory }}" | sed 's#\\#/#g' | sed 's#^\([A-Za-z]\):#/\L\1#')

        cd ${WORKING_DIRECTORY}

        if [[ "${LANGUAGE}" == "all" ]]; then
          LANGUAGE_ARRAY="[ \"${LANGUAGE}\" ]"
        else
          JQ_FILTER="keys[]"
          JQ_FILE="${LANGUAGES_FILE}"
          LANGUAGE_LINES=($(jq -r "${JQ_FILTER}" "${JQ_FILE}" | tr -d '\r'))
          FOUND_LANGUAGE=false
          for LANGUAGE_LINE in ${LANGUAGE_LINES[@]}; do
            if [[ "${LANGUAGE_LINE}" == "${LANGUAGE}" ]]; then
              FOUND_LANGUAGE=true
              LANGUAGE_ARRAY="[ \"${LANGUAGE}\" ]"
              break
            fi
          done
          if [[ "${FOUND_LANGUAGE}" == "true" ]]; then
            echo "Language '${LANGUAGE}' is found in the list."
          else
            echo "Error: Language '${LANGUAGE}' is NOT found in the list." >&2
            exit 1
          fi
        fi
        LANGUAGE_NUM=$(jq "length" <<< "${LANGUAGE_ARRAY}")

        echo "LANGUAGE_NUM=${LANGUAGE_NUM}" >> ${GITHUB_OUTPUT}
        echo "LANGUAGE_NUM:"
        echo "${LANGUAGE_NUM}"

        echo "LANGUAGE_ARRAY=${LANGUAGE_ARRAY}" >> ${GITHUB_OUTPUT}
        echo "LANGUAGE_ARRAY:"
        echo "${LANGUAGE_ARRAY}" | jq "."
