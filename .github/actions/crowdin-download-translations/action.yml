# Distributed under the OSI-approved BSD 3-Clause License.
# See accompanying file LICENSE.txt for details.

name: crowdin-download-translations

description: Download Translations from Crowdin

inputs:
  crowdin-config-file:
    required: false
    default: ''
    description: >
      The path to the Crowdin configuration file.
  crowdin-branch-name:
    required: false
    default: ''
    description: >
      The name of the branch to download translations in Crowdin.
  crowdin-project-id:
    required: false
    default: ''
    description: >
      The numeric ID of the project in Crowdin.
  crowdin-personal-token:
    required: false
    default: ''
    description: >
      The personal access token for authentication.
  crowdin-language-list:
    required: false
    default: ''
    description: >
      The comma-separated list of languages to download.
  crowdin-export-only-approved:
    required: false
    default: 'false'
    description: >
      Whether to export only approved translations.
  crowdin-no-progress:
    required: false
    default: 'false'
    description: >
      hether to disable progress on executed command.
  crowdin-verbose:
    required: false
    default: 'false'
    description: >
      Whether to provide more information about the command execution.
  crowdin-dryrun:
    required: false
    default: 'false'
    description: >
      Whether to print a command output without execution.
  working-directory:
    required: false
    default: '${{ github.workspace }}'
    description: >
      The root directory from which to run commands or find files.

runs:
  using: composite
  steps:
    - name: Get the Crowdin Arguments by Inputs
      id: crowdin-args
      shell: bash
      run: |
        INPUTS_JSON=$(echo '${{ toJSON(inputs) }}' | jq -c)
        INPUTS_KEYS=$(echo "${INPUTS_JSON}" | jq -r 'keys[]' | tr -d '\r')
        CROWDIN_ARGS=()
        for KEY in ${INPUTS_KEYS}; do
          VALUE=$(echo "${INPUTS_JSON}" | jq -r --arg key "${KEY}" '.[$key]')
          CROWDIN_ARG=""
          if [[ "${KEY}" == "crowdin-config-file" ]]; then
            if [[ "${VALUE}" != "" ]]; then
              CROWDIN_CONFIG_FILE=$(echo "${{ inputs.crowdin-config-file }}" | sed 's#\\#/#g' | sed 's#^\([A-Za-z]\):#/\L\1#')
              CROWDIN_ARG="--config=${CROWDIN_CONFIG_FILE}"
            fi
          elif [[ "${KEY}" == "crowdin-branch-name" ]]; then
            if [[ "${VALUE}" != "" ]]; then
              CROWDIN_BRANCH_NAME="${{ inputs.crowdin-branch-name }}"
              CROWDIN_ARG="--branch=${CROWDIN_BRANCH_NAME}"
            fi
          elif [[ "${KEY}" == "crowdin-project-id" ]]; then
            if [[ "${VALUE}" != "" ]]; then
              CROWDIN_PROJECT_ID="${{ inputs.crowdin-project-id }}"
              CROWDIN_ARG="--project-id=${CROWDIN_PROJECT_ID}"
            fi
          elif [[ "${KEY}" == "crowdin-personal-token" ]]; then
            if [[ "${VALUE}" != "" ]]; then
              CROWDIN_PERSONAL_TOKEN="${{ inputs.crowdin-personal-token }}"
              CROWDIN_ARG="--token=${CROWDIN_PERSONAL_TOKEN}"
            fi
          elif [[ "${KEY}" == "crowdin-language-list" ]]; then
            if [[ "${VALUE}" != "" ]]; then
              IFS="," read -r -a CROWDIN_LANGUAGE_LIST <<< "${{ inputs.crowdin-language-list }}"
              for CROWDIN_LANGUAGE in "${CROWDIN_LANGUAGE_LIST[@]}"; do
                if [[ -z ${CROWDIN_ARG} ]]; then
                  CROWDIN_ARG="--language=${CROWDIN_LANGUAGE}"
                else
                  CROWDIN_ARG="${CROWDIN_ARG} --language=${CROWDIN_LANGUAGE}"
                fi
              done
            fi
          elif [[ "${KEY}" == "crowdin-export-only-approved" ]]; then
            if [[ "${VALUE}" == "true" ]]; then
              CROWDIN_ARG="--export-only-approved"
            fi
          elif [[ "${KEY}" == "crowdin-no-progress" ]]; then
            if [[ "${VALUE}" == "true" ]]; then
              CROWDIN_ARG="--no-progress"
            fi
          elif [[ "${KEY}" == "crowdin-verbose" ]]; then
            if [[ "${VALUE}" == "true" ]]; then
              CROWDIN_ARG="--verbose"
            fi
          elif [[ "${KEY}" == "crowdin-dryrun" ]]; then
            if [[ "${VALUE}" == "true" ]]; then
              CROWDIN_ARG="--dryrun"
            fi
          fi
          CROWDIN_ARGS+=(${CROWDIN_ARG})
        done
        echo "CROWDIN_ARGS=${CROWDIN_ARGS[@]}" >> ${GITHUB_OUTPUT}
        echo "CROWDIN_ARGS:"
        echo "${CROWDIN_ARGS[@]}"

    - name: Download Translations from Crowdin
      shell: bash
      run: |
        WORKING_DIRECTORY=$(echo "${{ inputs.working-directory }}" | sed 's#\\#/#g' | sed 's#^\([A-Za-z]\):#/\L\1#')
        CROWDIN_ARGS="${{ steps.crowdin-args.outputs.CROWDIN_ARGS }}"
        cd "${WORKING_DIRECTORY}"
        echo "Downloading Translations from Crowdin..."
        echo ""
        echo "crowdin download ${CROWDIN_ARGS[@]}"
        echo ""
        crowdin download ${CROWDIN_ARGS[@]}
